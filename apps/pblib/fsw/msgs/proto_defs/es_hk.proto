syntax = "proto2";
import "nanopb.proto";

message es_hk_payload_pb
{
	required uint32 CmdCounter = 1;
	required uint32 ErrCounter = 2;
	required uint32 CFECoreChecksum = 3;
	required uint32 CFEMajorVersion = 4;
	required uint32 CFEMinorVersion = 5;
	required uint32 CFERevision = 6;
	required uint32 CFEMissionRevision = 7;
	required uint32 OSALMajorVersion = 8;
	required uint32 OSALMinorVersion = 9;
	required uint32 OSALRevision = 10;
	required uint32 OSALMissionRevision = 11;
	required uint32 SysLogBytesUsed = 12;
	required uint32 SysLogSize = 13;
	required uint32 SysLogEntries = 14;
	required uint32 SysLogMode = 15;
	required uint32 ERLogIndex = 16;
	required uint32 ERLogEntries = 17;
	required uint32 RegisteredCoreApps = 18;
	required uint32 RegisteredExternalApps = 19;
	required uint32 RegisteredTasks = 20;
	required uint32 RegisteredLibs = 21;
	required uint32 ResetType = 22;
	required uint32 ResetSubtype = 23;
	required uint32 ProcessorResets = 24;
	required uint32 MaxProcessorResets = 25;
	required uint32 BootSource = 26;
	required uint32 PerfState = 27;
	required uint32 PerfMode = 28;
	required uint32 PerfTriggerCount = 29;
	repeated uint32 PerfFilterMask = 30 [packed=true, (nanopb).max_count = 4];
	repeated uint32 PerfTriggerMask = 31 [packed=true, (nanopb).max_count = 4];
	required uint32 PerfDataStart = 32;
	required uint32 PerfDataEnd = 33;
	required uint32 PerfDataCount = 34;
	required uint32 PerfDataToWrite = 35;
	required uint32 HeapBytesFree = 36;
	required uint32 HeapBlocksFree = 37;
	required uint32 HeapMaxBlockSize = 38;
}

message es_hk_pb
{
	required es_hk_payload_pb payload = 1;
}

