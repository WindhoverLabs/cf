syntax = "proto2";
import "nanopb.proto";

message px4br_ekf2_replay_pb
{
	required uint64 timestamp = 1;
	required uint64 time_ref = 2;
	required uint64 magnetometer_timestamp = 3;
	required uint64 baro_timestamp = 4;
	required uint64 rng_timestamp = 5;
	required uint64 flow_timestamp = 6;
	required uint64 asp_timestamp = 7;
	required uint64 ev_timestamp = 8;
	required uint64 time_usec = 9;
	required uint64 time_usec_vel = 10;
	required float gyro_integral_dt = 11;
	required float accelerometer_integral_dt = 12;
	repeated float gyro_rad = 13 [packed=true, (nanopb).max_count = 3];
	repeated float accelerometer_m_s2 = 14 [packed=true, (nanopb).max_count = 3];
	repeated float magnetometer_ga = 15 [packed=true, (nanopb).max_count = 3];
	required float baro_alt_meter = 16;
	required int32 lat = 17;
	required int32 lon = 18;
	required int32 alt = 19;
	required float eph = 20;
	required float epv = 21;
	required float sacc = 22;
	required float vel_m_s = 23;
	required float vel_n_m_s = 24;
	required float vel_e_m_s = 25;
	required float vel_d_m_s = 26;
	required float range_to_ground = 27;
	repeated float flow_pixel_integral = 28 [packed=true, (nanopb).max_count = 2];
	repeated float flow_gyro_integral = 29 [packed=true, (nanopb).max_count = 2];
	required uint32 flow_time_integral = 30;
	required float indicated_airspeed_m_s = 31;
	required float true_airspeed_m_s = 32;
	repeated float pos_ev = 33 [packed=true, (nanopb).max_count = 3];
	repeated float quat_ev = 34 [packed=true, (nanopb).max_count = 4];
	required float pos_err = 35;
	required float ang_err = 36;
	required uint32 fix_type = 37;
	required uint32 nsats = 38;
	required bool vel_ned_valid = 39;
	required uint32 flow_quality = 40;
}

// ORB_DECLARE(ekf2_replay);
