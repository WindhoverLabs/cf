syntax = "proto2";
import "nanopb.proto";

message px4_position_setpoint_pb
{
	enum SETPOINT_TYPE 
	{
	    	SETPOINT_TYPE_POSITION = 0;
	    	SETPOINT_TYPE_VELOCITY = 1;
	    	SETPOINT_TYPE_LOITER = 2;
	    	SETPOINT_TYPE_TAKEOFF = 3;
	    	SETPOINT_TYPE_LAND = 4;
	    	SETPOINT_TYPE_IDLE = 5;
	    	SETPOINT_TYPE_OFFBOARD = 6;
	    	SETPOINT_TYPE_FOLLOW_TARGET = 7;
	}

	required uint64 timestamp = 1;
	required double lat = 2;
	required double lon = 3;
	required float x = 4;
	required float y = 5;
	required float z = 6;
	required float vx = 7;
	required float vy = 8;
	required float vz = 9;
	required float alt = 10;
	required float yaw = 11;
	required float yawspeed = 12;
	required float loiter_radius = 13;
	required float pitch_min = 14;
	required float a_x = 15;
	required float a_y = 16;
	required float a_z = 17;
	required float acceptance_radius = 18;
	required float cruising_speed = 19;
	required float cruising_throttle = 20;
	required bool valid = 21;
	required uint32 type = 22;
	required bool position_valid = 23;
	required bool velocity_valid = 24;
	required uint32 velocity_frame = 25;
	required bool alt_valid = 26;
	required bool yaw_valid = 27;
	required bool disable_mc_yaw_control = 28;
	required bool yawspeed_valid = 29;
	required int32 loiter_direction = 30;
	required bool acceleration_valid = 31;
	required bool acceleration_is_force = 32;
}

message px4_position_setpoint_triplet_pb 
{
	required uint64 timestamp = 1;
	required px4_position_setpoint_pb previous = 2;
	required px4_position_setpoint_pb current = 3;
	required px4_position_setpoint_pb next = 4;
}

// ORB_DECLARE(position_setpoint_triplet);
