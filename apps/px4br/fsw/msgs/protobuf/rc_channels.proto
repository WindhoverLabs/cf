syntax = "proto2";
import "nanopb.proto";

message px4br_rc_channels_pb 
{
	enum RC_CHANNELS_FUNCTION 
	{
	    	RC_CHANNELS_FUNCTION_THROTTLE = 0;
	    	RC_CHANNELS_FUNCTION_ROLL = 1;
	    	RC_CHANNELS_FUNCTION_PITCH = 2;
	    	RC_CHANNELS_FUNCTION_YAW = 3;
	    	RC_CHANNELS_FUNCTION_MODE = 4;
	    	RC_CHANNELS_FUNCTION_RETURN = 5;
	    	RC_CHANNELS_FUNCTION_POSCTL = 6;
	    	RC_CHANNELS_FUNCTION_LOITER = 7;
	    	RC_CHANNELS_FUNCTION_OFFBOARD = 8;
	    	RC_CHANNELS_FUNCTION_ACRO = 9;
	    	RC_CHANNELS_FUNCTION_FLAPS = 10;
	    	RC_CHANNELS_FUNCTION_AUX_1 = 11;
	    	RC_CHANNELS_FUNCTION_AUX_2 = 12;
	    	RC_CHANNELS_FUNCTION_AUX_3 = 13;
	    	RC_CHANNELS_FUNCTION_AUX_4 = 14;
	    	RC_CHANNELS_FUNCTION_AUX_5 = 15;
	    	RC_CHANNELS_FUNCTION_PARAM_1 = 16;
	    	RC_CHANNELS_FUNCTION_PARAM_2 = 17;
	    	RC_CHANNELS_FUNCTION_PARAM_3_5 = 18;
	    	RC_CHANNELS_FUNCTION_RATTITUDE = 19;
	    	RC_CHANNELS_FUNCTION_KILLSWITCH = 20;
	    	RC_CHANNELS_FUNCTION_TRANSITION = 21;
	}

	required uint64 timestamp = 1;
	required uint64 timestamp_last_valid = 2;
	repeated float channels = 3 [(nanopb).max_count = 18];
	required uint32 frame_drop_count = 4;
	required uint32 channel_count = 5;
	repeated int32 function = 6 [(nanopb).max_count = 26];
	required uint32 rssi = 7;
	required bool signal_lost = 8;
}

// ORB_DECLARE(rc_channels);
