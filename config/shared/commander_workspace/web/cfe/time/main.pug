extends ../../common/layout

block header
        i.fa-fw.fa.fa-signal
        | Time

block main
  .row.row-fluid
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:500px')
      #wid-CFE-Time-CmdAndData.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Housekeeping
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style='width:100px') Cmd Count
                    td(style='width:100px') 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/CmdCounter'}]}) ---
                    td(style='width:100px') 
                      .btn-group
                        button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/NoOp'}}) No-Op
                        button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Reset'}}) Reset
                  tr
                    th Cmd Error Count
                    td
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ErrCounter'}]}) ---
                    td
                  tr
                    th Is Set
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ClockSet'}]}) ---
                    td
                  tr
                    th Is Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Flying'}]}) ---
                    td
                  tr
                    th Source Internal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SrcInt'}]}) ---
                    td
                  tr
                    th Signal is Primary
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SigPri'}]}) ---
                    td
                  tr
                    th Server is Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SrvFly'}]}) ---
                    td
                  tr
                    th Commanded Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/CmdFly'}]}) ---
                    td
                  tr
                    th Add Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/AddAdj'}]}) ---
                    td
                  tr
                    th Add 1Hz
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Add1Hz'}]}) ---
                    td
                  tr
                    th Add TCL
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/AddTcl'}]}) ---
                    td
                  tr
                    th Is Server
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Server'}]}) ---
                    td
                  tr
                    th Tone Good
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/GoodTone'}]}) ---
                    td
                  tr
                    th State API
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ClockStateAPI'}]}) ---
                    td
                  tr
                    th Leap Seconds
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/LeapSeconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetLeaps'}}) Set
                  tr
                    th MET
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/MET_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetMET'}}) Set
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/MET_Subseconds'}]}) ---
                    td
                  tr
                    th STCF
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/STCF_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSTCF'}}) Set
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/STCF_Subseconds'}]}) ---
                    td
                  tr
                    th 1Hz Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/1HzAdj_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Add1HzAdj'}}) Add
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Sub1HzAdj'}}) Sub
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/1HzAdj_Subseconds'}]}) ---
                    td
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetState'}}) Set State
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSource'}}) Set Source
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSignal'}}) Set Signal
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/AddDelay'}}) Add Delay
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SubDelay'}}) Sub Delay
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetTime'}}) Set Time
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetMET'}}) Set MET
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSTCF'}}) Set STCF
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/AddAdjust'}}) Add Adjust
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SubAdjust'}}) Sub Adjust

    - 
      var schDef = {
        slotCount:200,
        entriesPerSlot:5,
        appName:'CFE_TIME',
        slots:[
          {id:100, activities:[1]}],
        groups:[
          {name:'SCH_GROUP_CFE_TIME_SEND_HK', id:0x00400000}]};
                     
  .row.row-fluid
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic1.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 1
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th At Tone MET
                    td 
                      span#CFE_TIME_Diag_AtToneMET --- 
                  tr
                    th At Tone STCF
                    td 
                      span#CFE_TIME_Diag_AtToneSTCF --- 
                  tr
                    th At Tone Delay
                    td 
                      span#CFE_TIME_Diag_AtToneDelay --- 
                  tr
                    th At Tone Latch
                    td 
                      span#CFE_TIME_Diag_AtToneLatch --- 
                  tr
                    th At Tone Leaps
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_AtToneLeaps'}]}) ---
                  tr
                    th Clock API State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateAPI'}]}) ---
                  tr
                    th Time Since Tone
                    td 
                      span#CFE_TIME_Diag_TimeSinceTone --- 
                  tr
                    th Current Latch
                    td 
                      span#CFE_TIME_Diag_CurrentLatch --- 
                  tr
                    th Current MET
                    td 
                      span#CFE_TIME_Diag_CurrentMET --- 
                  tr
                    th Current TAI
                    td 
                      span#CFE_TIME_Diag_CurrentTAI --- 
                  tr
                    th Current UTC
                    td 
                      span#CFE_TIME_Diag_CurrentUTC --- 
                  tr
                    th Set State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSetState'}]}) ---
                  tr
                    th Fly State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockFlyState'}]}) ---
                  tr
                    th Source
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSource'}]}) ---
                  tr
                    th Signal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSignal'}]}) ---
                  tr
                    th Server Fly State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ServerFlyState'}]}) ---
                  tr
                    th Forced to Fly
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_Forced2Fly'}]}) ---
                  tr
                    th Clock Set
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_CLKSET'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
                      
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic2.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 2
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Clock Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_FLYING'}]}) ---
                  tr
                    th Source Internal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SRCINT'}]}) ---
                  tr
                    th Signal Primary
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SIGPRI'}]}) ---
                  tr
                    th Server Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SRVFLY'}]}) ---
                  tr
                    th Commanded Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_CMDFLY'}]}) ---
                  tr
                    th Add Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADDADJ'}]}) ---
                  tr
                    th Add 1Hz Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADD1HZ'}]}) ---
                  tr
                    th Add TCL
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADDTCL'}]}) ---
                  tr
                    th Is Server
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SERVER'}]}) ---
                  tr
                    th Good Tone
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_GDTONE'}]}) ---
                  tr
                    th One Time Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_OneTimeDirection'}]}) ---
                  tr
                    th 1Hz Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_OneHzDirection'}]}) ---
                  tr
                    th Delay Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_DelayDirection'}]}) ---
                  tr
                    th One Time Adjust
                    td 
                      span#CFE_TIME_Diag_OneTimeAdjust ---
                  tr
                    th 1Hz Adjust
                    td
                      span#CFE_TIME_Diag_OneHzAdjust ---
                  tr
                    th Tone Signal Latch
                    td
                      span#CFE_TIME_Diag_ToneSignalLatch ---
                  tr
                    th Tone Data Latch
                    td
                      span#CFE_TIME_Diag_ToneDataLatch ---
                  tr
                    th Tone Match Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneMatchCount'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
              
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic3.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 3
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Tone Match Errors
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneMatchErrors'}]}) ---
                  tr
                    th Tone Signal Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneSignalCount'}]}) ---
                  tr
                    th Tone Data Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneDataCount'}]}) ---
                  tr
                    th Tone Int Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneIntCount'}]}) ---
                  tr
                    th Tone Int Errors
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneIntErrors'}]}) ---
                  tr
                    th Tone Task Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneTaskCount'}]}) ---
                  tr
                    th Version Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_VersionCount'}]}) ---
                  tr
                    th Local Int Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_LocalIntCount'}]}) ---
                  tr
                    th Local Task Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_LocalTaskCount'}]}) ---
                  tr
                    th Virtual MET
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_VirtualMET'}]}) ---
                  tr
                    th Min Elapsed
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_MinElapsed'}]}) ---
                  tr
                    th Max Elapsed
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_MaxElapsed'}]}) ---
                  tr
                    th Max Local Clock
                    td 
                      span#CFE_TIME_Diag_MaxLocalClock ---
                  tr
                    th Tone Over Limit
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneOverLimit'}]}) ---
                  tr
                    th Tone Under Limit
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneUnderLimit'}]}) ---
                  tr
                    th Data Store Status
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_DataStoreStatus'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
                            
    include /panels/cfe/event_filters.pug
    include /panels/apps/sch/scheduler.pug

block scripts
  script.
    /*
    var CFE_TIME_MET_Seconds = 0;
    var CFE_TIME_MET_Subseconds = 0;
    var CFE_TIME_STCF_Seconds = 0;
    var CFE_TIME_STCF_Subseconds = 0;
    var CFE_TIME_1HzAdj_Seconds = 0;
    var CFE_TIME_1HzAdj_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneMET_Seconds = 0;
    var CFE_TIME_Diag_AtToneMET_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneDelay_Seconds = 0;
    var CFE_TIME_Diag_AtToneDelay_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneSTCF_Seconds = 0;
    var CFE_TIME_Diag_AtToneSTCF_Subseconds = 0;   
    var CFE_TIME_Diag_AtToneLatch_Seconds = 0;
    var CFE_TIME_Diag_AtToneLatch_Subseconds = 0; 
    var CFE_TIME_Diag_TimeSinceTone_Seconds = 0;
    var CFE_TIME_Diag_TimeSinceTone_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentLatch_Seconds = 0;
    var CFE_TIME_Diag_CurrentLatch_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentMET_Seconds = 0;
    var CFE_TIME_Diag_CurrentMET_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentTAI_Seconds = 0;
    var CFE_TIME_Diag_CurrentTAI_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentUTC_Seconds = 0;
    var CFE_TIME_Diag_CurrentUTC_Subseconds = 0; 
    var CFE_TIME_Diag_OneTimeAdjust_Seconds = 0;
    var CFE_TIME_Diag_OneTimeAdjust_Subseconds = 0; 
    var CFE_TIME_Diag_OneHzAdjust_Seconds = 0;
    var CFE_TIME_Diag_OneHzAdjust_Subseconds = 0; 
    var CFE_TIME_Diag_ToneSignalLatch_Seconds = 0;
    var CFE_TIME_Diag_ToneSignalLatch_Subseconds = 0; 
    var CFE_TIME_Diag_ToneDataLatch_Seconds = 0;
    var CFE_TIME_Diag_ToneDataLatch_Subseconds = 0; 
    var CFE_TIME_Diag_MaxLocalClock_Seconds = 0;
    var CFE_TIME_Diag_MaxLocalClock_Subseconds = 0; 
       
     
    sage.Subscribe("CFE_EVS_CommandCounter", function(record) {
      var timeStamp = CfeTimeToJsTime(record.seconds, record.subseconds)
      $("#CFE_EVS_LastUpdate").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
    });
    
      sage.Subscribe("CFE_TIME_CmdCounter", function(record) {
        var timeStamp = CfeTimeToJsTime(record.seconds, record.subseconds)
        $("#CFE_TIME_LastUpdate").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_SecondsMET", function(record) {
        CFE_TIME_MET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_SubsecsMET", function(record) {
        CFE_TIME_MET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_MET_Seconds, CFE_TIME_MET_Subseconds)
        $("#CFE_TIME_MET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_SecondsSTCF", function(record) {
        CFE_TIME_STCF_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_SubsecsSTCF", function(record) {
        CFE_TIME_STCF_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_STCF_Seconds, CFE_TIME_STCF_Subseconds)
        $("#CFE_TIME_STCF").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Seconds1HzAdj", function(record) {
        CFE_TIME_1HzAdj_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Subsecs1HzAdj", function(record) {
        CFE_TIME_1HzAdj_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_1HzAdj_Seconds, CFE_TIME_1HzAdj_Subseconds)
        $("#CFE_TIME_1HzAdj").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneMET_Seconds", function(record) {
        CFE_TIME_Diag_AtToneMET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneMET_Seconds", function(record) {
        CFE_TIME_Diag_AtToneMET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneMET_Seconds, CFE_TIME_Diag_AtToneMET_Subseconds)
        $("#CFE_TIME_Diag_AtToneMET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneSTCF_Seconds", function(record) {
        CFE_TIME_Diag_AtToneSTCF_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneSTCF_Seconds", function(record) {
        CFE_TIME_Diag_AtToneSTCF_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneSTCF_Seconds, CFE_TIME_Diag_AtToneSTCF_Subseconds)
        $("#CFE_TIME_Diag_AtToneSTCF").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneDelay_Seconds", function(record) {
        CFE_TIME_Diag_AtToneDelay_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneDelay_Seconds", function(record) {
        CFE_TIME_Diag_AtToneDelay_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneDelay_Seconds, CFE_TIME_Diag_AtToneDelay_Subseconds)
        $("#CFE_TIME_Diag_AtToneDelay").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneLatch_Seconds", function(record) {
        CFE_TIME_Diag_AtToneLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneLatch_Seconds", function(record) {
        CFE_TIME_Diag_AtToneLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneLatch_Seconds, CFE_TIME_Diag_AtToneLatch_Subseconds)
        $("#CFE_TIME_Diag_AtToneLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_TimeSinceTone_Seconds", function(record) {
        CFE_TIME_Diag_TimeSinceTone_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_TimeSinceTone_Seconds", function(record) {
        CFE_TIME_Diag_TimeSinceTone_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_TimeSinceTone_Seconds, CFE_TIME_Diag_TimeSinceTone_Subseconds)
        $("#CFE_TIME_Diag_TimeSinceTone").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentLatch_Seconds", function(record) {
        CFE_TIME_Diag_CurrentLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentLatch_Seconds", function(record) {
        CFE_TIME_Diag_CurrentLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentLatch_Seconds, CFE_TIME_Diag_CurrentLatch_Subseconds)
        $("#CFE_TIME_Diag_CurrentLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentMET_Seconds", function(record) {
        CFE_TIME_Diag_CurrentMET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentMET_Seconds", function(record) {
        CFE_TIME_Diag_CurrentMET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentMET_Seconds, CFE_TIME_Diag_CurrentMET_Subseconds)
        $("#CFE_TIME_Diag_CurrentMET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentTAI_Seconds", function(record) {
        CFE_TIME_Diag_CurrentTAI_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentTAI_Seconds", function(record) {
        CFE_TIME_Diag_CurrentTAI_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentTAI_Seconds, CFE_TIME_Diag_CurrentTAI_Subseconds)
        $("#CFE_TIME_Diag_CurrentTAI").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentUTC_Seconds", function(record) {
        CFE_TIME_Diag_CurrentUTC_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentUTC_Seconds", function(record) {
        CFE_TIME_Diag_CurrentUTC_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentUTC_Seconds, CFE_TIME_Diag_CurrentUTC_Subseconds)
        $("#CFE_TIME_Diag_CurrentUTC").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_OneTimeAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneTimeAdjust_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_OneTimeAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneTimeAdjust_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_OneTimeAdjust_Seconds, CFE_TIME_Diag_OneTimeAdjust_Subseconds)
        $("#CFE_TIME_Diag_OneTimeAdjust").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_OneHzAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneHzAdjust_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_OneHzAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneHzAdjust_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_OneHzAdjust_Seconds, CFE_TIME_Diag_OneHzAdjust_Subseconds)
        $("#CFE_TIME_Diag_OneHzAdjust").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_ToneSignalLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneSignalLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_ToneSignalLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneSignalLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_ToneSignalLatch_Seconds, CFE_TIME_Diag_ToneSignalLatch_Subseconds)
        $("#CFE_TIME_Diag_ToneSignalLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_ToneDataLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneDataLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_ToneDataLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneDataLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_ToneDataLatch_Seconds, CFE_TIME_Diag_ToneDataLatch_Subseconds)
        $("#CFE_TIME_Diag_ToneDataLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_MaxLocalClock_Seconds", function(record) {
        CFE_TIME_Diag_MaxLocalClock_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_MaxLocalClock_Seconds", function(record) {
        CFE_TIME_Diag_MaxLocalClock_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_MaxLocalClock_Seconds, CFE_TIME_Diag_MaxLocalClock_Subseconds)
        $("#CFE_TIME_Diag_MaxLocalClock").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
      */
