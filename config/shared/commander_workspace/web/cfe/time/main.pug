extends ../../common/layout

block header
        i.fa-fw.fa.fa-signal
        | Time

block main
  .row.row-fluid
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:500px')
      #wid-CFE-Time-CmdAndData.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Housekeeping
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style='width:100px') Cmd Count
                    td(style='width:100px') 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/CmdCounter'}]}) ---
                    td(style='width:100px') 
                      .btn-group
                        button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/NoOp'}}) No-Op
                        button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Reset'}}) Reset
                  tr
                    th Cmd Error Count
                    td
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ErrCounter'}]}) ---
                    td
                  tr
                    th Is Set
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ClockSet'}]}) ---
                    td
                  tr
                    th Is Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Flying'}]}) ---
                    td
                  tr
                    th Source Internal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SrcInt'}]}) ---
                    td
                  tr
                    th Signal is Primary
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SigPri'}]}) ---
                    td
                  tr
                    th Server is Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/SrvFly'}]}) ---
                    td
                  tr
                    th Commanded Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/CmdFly'}]}) ---
                    td
                  tr
                    th Add Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/AddAdj'}]}) ---
                    td
                  tr
                    th Add 1Hz
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Add1Hz'}]}) ---
                    td
                  tr
                    th Add TCL
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/AddTcl'}]}) ---
                    td
                  tr
                    th Is Server
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Server'}]}) ---
                    td
                  tr
                    th Tone Good
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/GoodTone'}]}) ---
                    td
                  tr
                    th State API
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/ClockStateAPI'}]}) ---
                    td
                  tr
                    th Leap Seconds
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/LeapSeconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetLeaps'}}) Set
                  tr
                    th MET
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/MET_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetMET'}}) Set
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/MET_Subseconds'}]}) ---
                    td
                  tr
                    th STCF
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/STCF_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSTCF'}}) Set
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/STCF_Subseconds'}]}) ---
                    td
                  tr
                    th 1Hz Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/1HzAdj_Seconds'}]}) ---
                    td
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Add1HzAdj'}}) Add
                      button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/Sub1HzAdj'}}) Sub
                  tr
                    th
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/1HzAdj_Subseconds'}]}) ---
                    td
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetState'}}) Set State
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSource'}}) Set Source
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSignal'}}) Set Signal
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/AddDelay'}}) Add Delay
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SubDelay'}}) Sub Delay
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetTime'}}) Set Time
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetMET'}}) Set MET
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SetSTCF'}}) Set STCF
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/AddAdjust'}}) Add Adjust
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/SubAdjust'}}) Sub Adjust

    - 
      var schDef = {
        slotCount:200,
        entriesPerSlot:5,
        appName:'CFE_TIME',
        slots:[
          {id:100, activities:[1]}],
        groups:[
          {name:'SCH_GROUP_CFE_TIME_SEND_HK', id:0x00400000}]};
  
    article.col-xs-12.col-sm-12.col-md-12.col-lg-5
      #wid-CFE-EVS-SCH.jarviswidget.jarviswidget-color-blueDark(style='width: 860px' data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Scheduler 
            button.btn.btn-xs.btn-primary.btn-labeled(data-sage={cmd:{name:'/CFS/SCH/SendDiagTlm'}}) Send Schedule
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style='width: 150px') Cmd Count
                    td
                      span(data-sage={tlm: [{name:'/CFS/SCH/CmdCounter'}]}) ---
                  tr
                    th Error Count
                    td
                      span(data-sage={tlm: [{name:'/CFS/SCH/ErrCounter'}]}) ---
            .table-responsive
              table.table.table-bordered.table-condensed
                thead
                  tr
                    th(style="width: 100px") Slot #
                    th(style="width: 100px") Activity #
                    th(style="width: 150px") State
                    th MsgID
                    th(style="width: 150px") Action
                tbody
                  - for (var slotIdx = 0; slotIdx < schDef.slots.length; ++slotIdx) {
                    - var slotID = schDef.slots[slotIdx].id;
                    - var strSlotID = '' + slotID;
                    - for (var actIdx = 0; actIdx < schDef.slots[slotIdx].activities.length; ++actIdx){
                      - var actID = schDef.slots[slotIdx].activities[actIdx];
                      - var strActID =  '' + actID;
                      - var entryID = (schDef.entriesPerSlot * slotID) + actID;
                      - var strEntryID = '' + entryID;
                      - var tlmEntryState = {tlm:[{name:'/CFS/SCH/EntryState_'+entryID}]};
                      - var tlmMsgID = {tlm:[{name:'/CFS/SCH/MsgID_'+entryID}]};
                      - var cmdEnableEntry = {cmd: {name:'/CFS/SCH/EnableEntry', argument:[{name:'Slot', value:strSlotID},{name:'Entry', value:strActID}]}};
                      - var cmdDisableEntry = {cmd: {name:'/CFS/SCH/DisableEntry', argument:[{name:'Slot', value:strSlotID},{name:'Entry', value:strActID}]}};
                      tr
                        td #{slotID}
                        td #{strActID}
                        td 
                          span(data-sage= tlmEntryState) ---
                        td
                          span(data-sage= tlmMsgID) ---
                        td
                          .btn-group.dropup
                            button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableEntry) Ena
                            button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableEntry) Dis
                    - };
                  - };
            .table-responsive
              table.table.table-bordered.table-condensed
                thead
                  tr
                    th(style="width: 100px") Group Name
                    th(style="width: 100px") Group ID
                    th(style="width: 150px") Action
                tbody
                  - for (var grpIdx = 0; grpIdx < schDef.groups.length; ++grpIdx) {
                    - var grpName = schDef.groups[grpIdx].name;
                    - var grpID = schDef.groups[grpIdx].id;
                    - var strGrpID = '0x' + grpID.toString(16);
                    - var cmdEnableGroup = {cmd: {name:'/CFS/SCH/EnableGroup', argument:[{name:'Group', value:strGrpID}]}};
                    - var cmdDisableGroup = {cmd: {name:'/CFS/SCH/DisableGroup', argument:[{name:'Group', value:strGrpID}]}};
                    tr
                      td #{grpName}
                      td(style='font-family: monospace') #{strGrpID}
                      td
                        .btn-group.dropup
                          button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableGroup) Ena
                          button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableGroup) Dis
                  - };
                    
  .row.row-fluid
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic1.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 1
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th At Tone MET
                    td 
                      span#CFE_TIME_Diag_AtToneMET --- 
                  tr
                    th At Tone STCF
                    td 
                      span#CFE_TIME_Diag_AtToneSTCF --- 
                  tr
                    th At Tone Delay
                    td 
                      span#CFE_TIME_Diag_AtToneDelay --- 
                  tr
                    th At Tone Latch
                    td 
                      span#CFE_TIME_Diag_AtToneLatch --- 
                  tr
                    th At Tone Leaps
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_AtToneLeaps'}]}) ---
                  tr
                    th Clock API State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateAPI'}]}) ---
                  tr
                    th Time Since Tone
                    td 
                      span#CFE_TIME_Diag_TimeSinceTone --- 
                  tr
                    th Current Latch
                    td 
                      span#CFE_TIME_Diag_CurrentLatch --- 
                  tr
                    th Current MET
                    td 
                      span#CFE_TIME_Diag_CurrentMET --- 
                  tr
                    th Current TAI
                    td 
                      span#CFE_TIME_Diag_CurrentTAI --- 
                  tr
                    th Current UTC
                    td 
                      span#CFE_TIME_Diag_CurrentUTC --- 
                  tr
                    th Set State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSetState'}]}) ---
                  tr
                    th Fly State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockFlyState'}]}) ---
                  tr
                    th Source
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSource'}]}) ---
                  tr
                    th Signal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockSignal'}]}) ---
                  tr
                    th Server Fly State
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ServerFlyState'}]}) ---
                  tr
                    th Forced to Fly
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_Forced2Fly'}]}) ---
                  tr
                    th Clock Set
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_CLKSET'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
                      
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic2.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 2
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Clock Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_FLYING'}]}) ---
                  tr
                    th Source Internal
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SRCINT'}]}) ---
                  tr
                    th Signal Primary
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SIGPRI'}]}) ---
                  tr
                    th Server Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SRVFLY'}]}) ---
                  tr
                    th Commanded Flying
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_CMDFLY'}]}) ---
                  tr
                    th Add Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADDADJ'}]}) ---
                  tr
                    th Add 1Hz Adjust
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADD1HZ'}]}) ---
                  tr
                    th Add TCL
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_ADDTCL'}]}) ---
                  tr
                    th Is Server
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_SERVER'}]}) ---
                  tr
                    th Good Tone
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ClockStateFlags_GDTONE'}]}) ---
                  tr
                    th One Time Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_OneTimeDirection'}]}) ---
                  tr
                    th 1Hz Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_OneHzDirection'}]}) ---
                  tr
                    th Delay Direction
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_DelayDirection'}]}) ---
                  tr
                    th One Time Adjust
                    td 
                      span#CFE_TIME_Diag_OneTimeAdjust ---
                  tr
                    th 1Hz Adjust
                    td
                      span#CFE_TIME_Diag_OneHzAdjust ---
                  tr
                    th Tone Signal Latch
                    td
                      span#CFE_TIME_Diag_ToneSignalLatch ---
                  tr
                    th Tone Data Latch
                    td
                      span#CFE_TIME_Diag_ToneDataLatch ---
                  tr
                    th Tone Match Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneMatchCount'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
              
    article.col-xs-10.col-sm-6.col-md-5.col-lg-4(style='max-width:400px')
      #wid-CFE-Time-Diagnostic3.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Diagnostic 3
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Tone Match Errors
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneMatchErrors'}]}) ---
                  tr
                    th Tone Signal Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneSignalCount'}]}) ---
                  tr
                    th Tone Data Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneDataCount'}]}) ---
                  tr
                    th Tone Int Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneIntCount'}]}) ---
                  tr
                    th Tone Int Errors
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneIntErrors'}]}) ---
                  tr
                    th Tone Task Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneTaskCount'}]}) ---
                  tr
                    th Version Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_VersionCount'}]}) ---
                  tr
                    th Local Int Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_LocalIntCount'}]}) ---
                  tr
                    th Local Task Count
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_LocalTaskCount'}]}) ---
                  tr
                    th Virtual MET
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_VirtualMET'}]}) ---
                  tr
                    th Min Elapsed
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_MinElapsed'}]}) ---
                  tr
                    th Max Elapsed
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_MaxElapsed'}]}) ---
                  tr
                    th Max Local Clock
                    td 
                      span#CFE_TIME_Diag_MaxLocalClock ---
                  tr
                    th Tone Over Limit
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneOverLimit'}]}) ---
                  tr
                    th Tone Under Limit
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_ToneUnderLimit'}]}) ---
                  tr
                    th Data Store Status
                    td 
                      span(data-sage={tlm:[{name:'/CFS/CFE_TIME/Diag_DataStoreStatus'}]}) ---
            footer
              button.btn.btn-xs.btn-primary.btn-labeled.sage-cmd-inline(data-sage={cmd:{name:'/CFS/CFE_TIME/DiagTlm'}}) Telemeter Diag
                            
  .row
    article.col-xs-12.col-sm-12.col-md-10.col-lg-6(style={width:'500px'})               
      #wid-CFE-TIME-Events.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Event Filter
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style={width:'250px'}) CFE EVS Cmd Count
                    td(style={width:'150px'})
                      span(data-sage={tlm: [{name: '/CFS/CFE_EVS/CmdCounter'}]}) ---
                  tr
                    th CFE EVS Cmd Err Count
                    td
                      span(data-sage={tlm: [{name: '/CFS/CFE_EVS/ErrCounter'}]}) ---
                  tr
                    th App Events
                    td 
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/EnableAppEvents', argument:[{name:'AppName', value:'CFE_TIME'}]}}) Enable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/DisableAppEvents', argument:[{name:'AppName', value:'CFE_TIME'}]}}) Disable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/ResetAllFilters', argument:[{name:'AppName', value:'CFE_TIME'}]}}) Reset
                  tr
                    th Event Types
                    td
                  tr
                    td(style='padding-left: 20px !important') Critical
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/EnableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Set'},{name:'Debug', value:'Ignored'},{name:'Spare', value:'0'}]}}) Enable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/DisableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Set'},{name:'Debug', value:'Ignored'},{name:'Spare', value:'0'}]}}) Disable
                  tr
                    td(style='padding-left: 20px !important')  Error
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/EnableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Set'},{name:'Information', value:'Ignored'},{name:'Debug', value:'Ignored'},{name:'Spare', value:'0'}]}}) Enable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/DisableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Set'},{name:'Information', value:'Ignored'},{name:'Debug', value:'Ignored'},{name:'Spare', value:'0'}]}}) Disable
                  tr
                    td(style='padding-left: 20px !important')  Info
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/EnableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Set'},{name:'Error', value:'Ignored'},{name:'Spare', value:'0'}]}}) Enable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/DisableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Set'},{name:'Debug', value:'Ignored'},{name:'Spare', value:'0'}]}}) Disable
                  tr
                    td(style='padding-left: 20px !important')  Debug
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/EnableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Ignored'},{name:'Debug', value:'Set'},{name:'Spare', value:'0'}]}}) Enable
                        button.btn.btn-xs.btn-primary(data-sage={cmd: {name:'/CFS/CFE_EVS/DisableAppEventType', argument:[{name:'AppName', value:'CFE_TIME'},{name:'Critical', value:'Ignored'},{name:'Error', value:'Ignored'},{name:'Information', value:'Ignored'},{name:'Debug', value:'Set'},{name:'Spare', value:'0'}]}}) Disable
                  tr
                    th Event IDs
                    td
                  - 
                    var eventDef = {
                      appName:'CFE_TIME',
                      events:[
                        {name:'CFE_TIME_INIT_EID', eventID:1},
                        {name:'CFE_TIME_NOOP_EID', eventID:4},
                        {name:'CFE_TIME_RESET_EID', eventID:5},
                        {name:'CFE_TIME_DIAG_EID', eventID:6},
                        {name:'CFE_TIME_STATE_EID', eventID:7},
                        {name:'CFE_TIME_SOURCE_EID', eventID:8},
                        {name:'CFE_TIME_SIGNAL_EID', eventID:9},
                        {name:'CFE_TIME_DELAY_EID', eventID:11},
                        {name:'CFE_TIME_TIME_EID', eventID:12},
                        {name:'CFE_TIME_MET_EID', eventID:13},
                        {name:'CFE_TIME_STCF_EID', eventID:14},
                        {name:'CFE_TIME_DELTA_EID', eventID:15},
                        {name:'CFE_TIME_1HZ_EID', eventID:16},
                        {name:'CFE_TIME_LEAPS_EID', eventID:17},
                        {name:'CFE_TIME_FLY_ON_EID', eventID:20},
                        {name:'CFE_TIME_FLY_OFF_EID', eventID:21},
                        {name:'CFE_TIME_EXIT_ERR_EID', eventID:25},
                        {name:'CFE_TIME_ID_ERR_EID', eventID:26},
                        {name:'CFE_TIME_CC_ERR_EID', eventID:27},
                        {name:'CFE_TIME_STATE_ERR_EID', eventID:30},
                        {name:'CFE_TIME_SOURCE_ERR_EID', eventID:31},
                        {name:'CFE_TIME_SIGNAL_ERR_EID', eventID:32},
                        {name:'CFE_TIME_DELAY_ERR_EID', eventID:33},
                        {name:'CFE_TIME_TIME_ERR_EID', eventID:34},
                        {name:'CFE_TIME_MET_ERR_EID', eventID:35},
                        {name:'CFE_TIME_STCF_ERR_EID', eventID:36},
                        {name:'CFE_TIME_DELTA_ERR_EID', eventID:37},
                        {name:'CFE_TIME_SOURCE_CFG_EID', eventID:40},
                        {name:'CFE_TIME_SIGNAL_CFG_EID', eventID:41},
                        {name:'CFE_TIME_DELAY_CFG_EID', eventID:42},
                        {name:'CFE_TIME_TIME_CFG_EID', eventID:43},
                        {name:'CFE_TIME_MET_CFG_EID', eventID:44},
                        {name:'CFE_TIME_STCF_CFG_EID', eventID:45},
                        {name:'CFE_TIME_LEAPS_CFG_EID', eventID:46},
                        {name:'CFE_TIME_DELTA_CFG_EID', eventID:47},
                        {name:'CFE_TIME_1HZ_CFG_EID', eventID:48}]
                      }; 

                  - for (var idx = 0; idx < eventDef.events.length; ++idx) {
                      - var strEventID = '' + eventDef.events[idx].eventID;
                      - var cmdSetFilter = {cmd: {name:'/CFS/CFE_EVS/SetFilter', argument:[{name:'AppName', value:eventDef.appName},{name:'EventID', value:strEventID}]}};
                      - var cmdResetFilter = {cmd: {name:'/CFS/CFE_EVS/ResetFilter', argument:[{name:'AppName', value:eventDef.appName},{name:'EventID', value:strEventID}]}};
                      - var cmdAddEventFilter = {cmd: {name:'/CFS/CFE_EVS/AddEventFilter', argument:[{name:'AppName', value:eventDef.appName},{name:'EventID', value:strEventID}]}};
                      - var cmdDeleteEventFilter = {cmd: {name:'/CFS/CFE_EVS/DeleteEventFilter', argument:[{name:'AppName', value:eventDef.appName},{name:'EventID', value:strEventID}]}};
                      tr
                        td(style='padding-left: 20px !important')  #{eventDef.events[idx].name}
                        td
                          .btn-group
                            button.btn.btn-xs.btn-primary(data-sage= cmdSetFilter) Set
                            button.btn.btn-xs.btn-primary(data-sage= cmdResetFilter) Reset
                            button.btn.btn-xs.btn-primary(data-sage= cmdAddEventFilter) Add
                            button.btn.btn-xs.btn-primary(data-sage= cmdDeleteEventFilter) Delete
                  - };

block scripts
  script.
    /*
    var CFE_TIME_MET_Seconds = 0;
    var CFE_TIME_MET_Subseconds = 0;
    var CFE_TIME_STCF_Seconds = 0;
    var CFE_TIME_STCF_Subseconds = 0;
    var CFE_TIME_1HzAdj_Seconds = 0;
    var CFE_TIME_1HzAdj_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneMET_Seconds = 0;
    var CFE_TIME_Diag_AtToneMET_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneDelay_Seconds = 0;
    var CFE_TIME_Diag_AtToneDelay_Subseconds = 0; 
    var CFE_TIME_Diag_AtToneSTCF_Seconds = 0;
    var CFE_TIME_Diag_AtToneSTCF_Subseconds = 0;   
    var CFE_TIME_Diag_AtToneLatch_Seconds = 0;
    var CFE_TIME_Diag_AtToneLatch_Subseconds = 0; 
    var CFE_TIME_Diag_TimeSinceTone_Seconds = 0;
    var CFE_TIME_Diag_TimeSinceTone_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentLatch_Seconds = 0;
    var CFE_TIME_Diag_CurrentLatch_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentMET_Seconds = 0;
    var CFE_TIME_Diag_CurrentMET_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentTAI_Seconds = 0;
    var CFE_TIME_Diag_CurrentTAI_Subseconds = 0; 
    var CFE_TIME_Diag_CurrentUTC_Seconds = 0;
    var CFE_TIME_Diag_CurrentUTC_Subseconds = 0; 
    var CFE_TIME_Diag_OneTimeAdjust_Seconds = 0;
    var CFE_TIME_Diag_OneTimeAdjust_Subseconds = 0; 
    var CFE_TIME_Diag_OneHzAdjust_Seconds = 0;
    var CFE_TIME_Diag_OneHzAdjust_Subseconds = 0; 
    var CFE_TIME_Diag_ToneSignalLatch_Seconds = 0;
    var CFE_TIME_Diag_ToneSignalLatch_Subseconds = 0; 
    var CFE_TIME_Diag_ToneDataLatch_Seconds = 0;
    var CFE_TIME_Diag_ToneDataLatch_Subseconds = 0; 
    var CFE_TIME_Diag_MaxLocalClock_Seconds = 0;
    var CFE_TIME_Diag_MaxLocalClock_Subseconds = 0; 
       
     
    sage.Subscribe("CFE_EVS_CommandCounter", function(record) {
      var timeStamp = CfeTimeToJsTime(record.seconds, record.subseconds)
      $("#CFE_EVS_LastUpdate").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
    });
    
      sage.Subscribe("CFE_TIME_CmdCounter", function(record) {
        var timeStamp = CfeTimeToJsTime(record.seconds, record.subseconds)
        $("#CFE_TIME_LastUpdate").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_SecondsMET", function(record) {
        CFE_TIME_MET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_SubsecsMET", function(record) {
        CFE_TIME_MET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_MET_Seconds, CFE_TIME_MET_Subseconds)
        $("#CFE_TIME_MET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_SecondsSTCF", function(record) {
        CFE_TIME_STCF_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_SubsecsSTCF", function(record) {
        CFE_TIME_STCF_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_STCF_Seconds, CFE_TIME_STCF_Subseconds)
        $("#CFE_TIME_STCF").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Seconds1HzAdj", function(record) {
        CFE_TIME_1HzAdj_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Subsecs1HzAdj", function(record) {
        CFE_TIME_1HzAdj_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_1HzAdj_Seconds, CFE_TIME_1HzAdj_Subseconds)
        $("#CFE_TIME_1HzAdj").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneMET_Seconds", function(record) {
        CFE_TIME_Diag_AtToneMET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneMET_Seconds", function(record) {
        CFE_TIME_Diag_AtToneMET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneMET_Seconds, CFE_TIME_Diag_AtToneMET_Subseconds)
        $("#CFE_TIME_Diag_AtToneMET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneSTCF_Seconds", function(record) {
        CFE_TIME_Diag_AtToneSTCF_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneSTCF_Seconds", function(record) {
        CFE_TIME_Diag_AtToneSTCF_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneSTCF_Seconds, CFE_TIME_Diag_AtToneSTCF_Subseconds)
        $("#CFE_TIME_Diag_AtToneSTCF").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneDelay_Seconds", function(record) {
        CFE_TIME_Diag_AtToneDelay_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneDelay_Seconds", function(record) {
        CFE_TIME_Diag_AtToneDelay_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneDelay_Seconds, CFE_TIME_Diag_AtToneDelay_Subseconds)
        $("#CFE_TIME_Diag_AtToneDelay").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_AtToneLatch_Seconds", function(record) {
        CFE_TIME_Diag_AtToneLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_AtToneLatch_Seconds", function(record) {
        CFE_TIME_Diag_AtToneLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_AtToneLatch_Seconds, CFE_TIME_Diag_AtToneLatch_Subseconds)
        $("#CFE_TIME_Diag_AtToneLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_TimeSinceTone_Seconds", function(record) {
        CFE_TIME_Diag_TimeSinceTone_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_TimeSinceTone_Seconds", function(record) {
        CFE_TIME_Diag_TimeSinceTone_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_TimeSinceTone_Seconds, CFE_TIME_Diag_TimeSinceTone_Subseconds)
        $("#CFE_TIME_Diag_TimeSinceTone").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentLatch_Seconds", function(record) {
        CFE_TIME_Diag_CurrentLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentLatch_Seconds", function(record) {
        CFE_TIME_Diag_CurrentLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentLatch_Seconds, CFE_TIME_Diag_CurrentLatch_Subseconds)
        $("#CFE_TIME_Diag_CurrentLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentMET_Seconds", function(record) {
        CFE_TIME_Diag_CurrentMET_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentMET_Seconds", function(record) {
        CFE_TIME_Diag_CurrentMET_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentMET_Seconds, CFE_TIME_Diag_CurrentMET_Subseconds)
        $("#CFE_TIME_Diag_CurrentMET").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentTAI_Seconds", function(record) {
        CFE_TIME_Diag_CurrentTAI_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentTAI_Seconds", function(record) {
        CFE_TIME_Diag_CurrentTAI_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentTAI_Seconds, CFE_TIME_Diag_CurrentTAI_Subseconds)
        $("#CFE_TIME_Diag_CurrentTAI").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_CurrentUTC_Seconds", function(record) {
        CFE_TIME_Diag_CurrentUTC_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_CurrentUTC_Seconds", function(record) {
        CFE_TIME_Diag_CurrentUTC_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_CurrentUTC_Seconds, CFE_TIME_Diag_CurrentUTC_Subseconds)
        $("#CFE_TIME_Diag_CurrentUTC").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_OneTimeAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneTimeAdjust_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_OneTimeAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneTimeAdjust_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_OneTimeAdjust_Seconds, CFE_TIME_Diag_OneTimeAdjust_Subseconds)
        $("#CFE_TIME_Diag_OneTimeAdjust").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_OneHzAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneHzAdjust_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_OneHzAdjust_Seconds", function(record) {
        CFE_TIME_Diag_OneHzAdjust_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_OneHzAdjust_Seconds, CFE_TIME_Diag_OneHzAdjust_Subseconds)
        $("#CFE_TIME_Diag_OneHzAdjust").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_ToneSignalLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneSignalLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_ToneSignalLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneSignalLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_ToneSignalLatch_Seconds, CFE_TIME_Diag_ToneSignalLatch_Subseconds)
        $("#CFE_TIME_Diag_ToneSignalLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_ToneDataLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneDataLatch_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_ToneDataLatch_Seconds", function(record) {
        CFE_TIME_Diag_ToneDataLatch_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_ToneDataLatch_Seconds, CFE_TIME_Diag_ToneDataLatch_Subseconds)
        $("#CFE_TIME_Diag_ToneDataLatch").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
  
      sage.Subscribe("CFE_TIME_Diag_MaxLocalClock_Seconds", function(record) {
        CFE_TIME_Diag_MaxLocalClock_Seconds = record.value;
      });
      sage.Subscribe("CFE_TIME_Diag_MaxLocalClock_Seconds", function(record) {
        CFE_TIME_Diag_MaxLocalClock_Subseconds = record.value
        var timeStamp = CfeTimeToJsTime(CFE_TIME_Diag_MaxLocalClock_Seconds, CFE_TIME_Diag_MaxLocalClock_Subseconds)
        $("#CFE_TIME_Diag_MaxLocalClock").text($.format.date(timeStamp, "MM/dd/yyyy HH:mm:ss.") + timeStamp.getMilliseconds().toString().paddingLeft("000"));
      });
      */
