/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Fri Sep 29 16:05:02 2017. */

#ifndef PB_MSG_PB_H_INCLUDED
#define PB_MSG_PB_H_INCLUDED
#include "nanopb/pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _test_msg_int {
    int32_t content;
/* @@protoc_insertion_point(struct:test_msg_int) */
} test_msg_int;

/* Default values for struct fields */

/* Initializer values for message structs */
#define test_msg_int_init_default                {0}
#define test_msg_int_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define test_msg_int_content_tag                 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t test_msg_int_fields[2];

/* Maximum encoded size of messages (where known) */
#define test_msg_int_size                        11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MSG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
