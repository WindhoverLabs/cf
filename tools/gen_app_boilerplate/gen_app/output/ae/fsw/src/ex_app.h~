
/* license info needed here
 * 
 *
 * ex_app.h 
 */

#ifndef _ex_app_
#define _ex_app_

#include "cfe.h"

/* Event message ID's */
#define EX_INIT_INF_EID       1  /* start up message "informational" */
#define EX_NOOP_INF_EID       2  /* processed command "informational" */
#define EX_RESET_INF_EID      3
#define EX_PROCCESS_INF_EID   4
#define EX_MID_ERR_EID        5  /* invalid command packet "error" */
#define EX_CC1_ERR_EID        6
#define EX_LEN_ERR_EID        7
#define EX_PIPE_ERR_EID       8
#define EX_EVT_COUNT          8  /* count of event message ID's */

/* Example command packet command codes */
#define EX_NOOP_CC            0  /* no-op command */
#define EX_RESET_CC           1  /* reset counters */
#define EX_HELLOWORLD_CC      2  /* hello world command */

/* Example command pipe parameters */
#define EX_PIPE_DEPTH         12 /* Depth of the Command Pipe for Application */

/* Example app specific definitions */
#define EX_SB_TIMEOUT         CFE_SB_PEND_FOREVER  /* Can be a value in milliseconds */
#define EX_SB_PIPE_1_NAME     "EX_CMD_PIPE"

/* Type definition (generic "no arguments" command) */
typedef struct
{
    uint8                 CmdHeader[CFE_SB_CMD_HDR_SIZE];
} EX_NoArgsCmd_t;


/* Type definition (EX housekeeping) */
typedef struct
{
    uint8                 TlmHeader[CFE_SB_TLM_HDR_SIZE];

    /* Command interface counters */
    uint8                 CmdCounter;
    uint8                 ErrCounter;
} EX_HkPacket_t;


/** 
 *  \brief Example global data structure
 */
typedef struct
{
    /* Command interface counters */
    uint8                 CmdCounter;
    uint8                 ErrCounter;

    /* Housekeeping telemetry packet */
    EX_HkPacket_t         HkPacket;

    /* Operational data (not reported in housekeeping) */
    CFE_SB_MsgPtr_t       MsgPtr;
    CFE_SB_PipeId_t       CmdPipe;

    /* Run Status variable used in the main processing loop */
    uint32                RunStatus;

    /* Initialization data (not reported in housekeeping) */
    char                  PipeName[16];
    uint16                PipeDepth;
} EX_AppData_t;


/**
 * \brief Application entry point and main process loop
 */
void EX_AppMain(void);


/**
 * \brief Example app initialization
 */
int32 EX_AppInit(void);


/**
 * \brief Process command pipe message
 */
void EX_AppPipe(CFE_SB_MsgPtr_t msg);


/**
 * \brief On-board command (HK request)
 */
void EX_HousekeepingCmd(CFE_SB_MsgPtr_t msg);


/**
 * \brief ground command (NO-OP)
 */
void EX_NoopCmd(CFE_SB_MsgPtr_t msg);


/**
 * \brief ground command (reset counters)
 */
void EX_ResetCmd(CFE_SB_MsgPtr_t msg);


/**
 * \brief ground command (hello world command)
 */
void EX_HelloWorldCmd(CFE_SB_MsgPtr_t msg); 


/**
 * \brief Verify command packet length
 */
boolean EX_VerifyCmdLength(CFE_SB_MsgPtr_t msg, uint16 ExpectedLength); 


/* Exported Data */
extern EX_AppData_t     EX_AppData;

#endif /* _ex_app_ */

